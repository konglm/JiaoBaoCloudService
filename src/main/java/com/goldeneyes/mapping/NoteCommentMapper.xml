<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goldeneyes.IDao.NoteCommentMapper" >
  <resultMap id="BaseResultMap" type="com.goldeneyes.pojo.NoteComment" >
    <id column="TabId" property="tabid" jdbcType="INTEGER" />
    <result column="NoteId" property="noteid" jdbcType="INTEGER" />
    <result column="UserId" property="userid" jdbcType="INTEGER" />
    <result column="CommentContent" property="commentcontent" jdbcType="VARCHAR" />
    <result column="ReplyId" property="replyid" jdbcType="INTEGER" />
    <result column="CommentDate" property="commentdate" jdbcType="TIMESTAMP" />
    <result column="ReplyStatus" property="replystatus" jdbcType="TINYINT" />
    <result column="ReplyDate" property="replydate" jdbcType="TIMESTAMP" />
    <result column="Status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    TabId, NoteId, UserId, CommentContent, ReplyId, CommentDate, ReplyStatus, ReplyDate, 
    Status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from NoteComment
    where TabId = #{tabid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from NoteComment
    where TabId = #{tabid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.goldeneyes.pojo.NoteComment" >
    insert into NoteComment (NoteId, UserId, 
      CommentContent, ReplyId, CommentDate, 
      ReplyStatus, ReplyDate, Status
      )
    values (#{noteid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{commentcontent,jdbcType=VARCHAR}, #{replyid,jdbcType=INTEGER}, #{commentdate,jdbcType=TIMESTAMP}, 
      #{replystatus,jdbcType=TINYINT}, #{replydate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.goldeneyes.pojo.NoteComment" >
    insert into NoteComment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tabid != null" >
        TabId,
      </if>
      <if test="noteid != null" >
        NoteId,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="commentcontent != null" >
        CommentContent,
      </if>
      <if test="replyid != null" >
        ReplyId,
      </if>
      <if test="commentdate != null" >
        CommentDate,
      </if>
      <if test="replystatus != null" >
        ReplyStatus,
      </if>
      <if test="replydate != null" >
        ReplyDate,
      </if>
      <if test="status != null" >
        Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tabid != null" >
        #{tabid,jdbcType=INTEGER},
      </if>
      <if test="noteid != null" >
        #{noteid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null" >
        #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="replyid != null" >
        #{replyid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        #{commentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="replystatus != null" >
        #{replystatus,jdbcType=TINYINT},
      </if>
      <if test="replydate != null" >
        #{replydate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.goldeneyes.pojo.NoteComment" >
    update NoteComment
    <set >
      <if test="noteid != null" >
        NoteId = #{noteid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null" >
        CommentContent = #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="replyid != null" >
        ReplyId = #{replyid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        CommentDate = #{commentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="replystatus != null" >
        ReplyStatus = #{replystatus,jdbcType=TINYINT},
      </if>
      <if test="replydate != null" >
        ReplyDate = #{replydate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where TabId = #{tabid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goldeneyes.pojo.NoteComment" >
    update NoteComment
    set NoteId = #{noteid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=INTEGER},
      CommentContent = #{commentcontent,jdbcType=VARCHAR},
      ReplyId = #{replyid,jdbcType=INTEGER},
      CommentDate = #{commentdate,jdbcType=TIMESTAMP},
      ReplyStatus = #{replystatus,jdbcType=TINYINT},
      ReplyDate = #{replydate,jdbcType=TIMESTAMP},
      Status = #{status,jdbcType=TINYINT}
    where TabId = #{tabid,jdbcType=INTEGER}
  </update>
  <!-- 获取点到记事所有评论 -->
  <select id="getNoteCommentsById" resultType="com.goldeneyes.pojo.NoteComment">
  	select nc.UserId,nc.CommentContent,nc.ReplyId,nc.CommentDate 
  	from NoteComment nc 
  	where nc.Status = 1 and nc.NoteId = #{0}
  	order by nc.CommentDate desc
  </select>
  <!-- 获取用户点到记事所有未读评论回复条数 -->
  <select id="getNoteCommentReplysCntByUser" resultType="java.lang.Integer">
  	select COUNT(nc.TabId) 
  	from NoteComment nc 
  	where nc.Status = 1 and nc.ReplyStatus = 0 and nc.ReplyId = #{0}
  </select>
  <!-- 获取用户点到记事所有未读评论回复列表 -->
  <select id="getNoteCommentReplysByUser" resultType="com.goldeneyes.pojo.NoteComment">
  	select nc.TabId,nc.UserId,nc.NoteId,nc.CommentContent
  	from NoteComment nc 
  	where nc.Status = 1 and nc.ReplyStatus = 0 and nc.ReplyId = #{0}
	order by nc.CommentDate desc
  </select>
  <!-- 修改某用户某点到记事评论回复查看状态 -->
  <update id="setNoteCommentReplyById" parameterType="com.goldeneyes.pojo.NoteComment" >
    update NoteComment
    set 
      ReplyStatus = 1,
      ReplyDate = getdate()
    where TabId = #{tabid,jdbcType=INTEGER}
  </update>
  <!-- 删除某点到记事的评论 -->
  <delete id="deleteByNoteId" parameterType="java.lang.Integer" >
    delete from NoteComment
    where NoteId = #{noteId,jdbcType=INTEGER}
  </delete>
</mapper>